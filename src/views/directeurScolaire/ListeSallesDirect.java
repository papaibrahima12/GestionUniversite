package views.directeurScolaire;

import java.awt.BorderLayout;

import java.awt.Color;
import java.awt.Component;
import javax.swing.*;
import javax.swing.table.TableColumnModel;

import autre.ButtonEdit;
import autre.CellCenter;
import views.Table;

/**
 * cette classe permet d'avoir la liste des salles libres ou occupées mais egalement permet au directeur de modifier les
 * proprétés de la salles (projecteur existant,accés handicap,occupation...)
 */
public class ListeSallesDirect extends javax.swing.JPanel {

    /**
     * Le constructeur qui permet d'initialiser les differents composants
     */
    public ListeSallesDirect() {
        initComponents();
        initSalle();
    }

    /**
     * cette methode permet d'avoir la liste des salles avec leurs propriétés
     */
    public void initSalle() {
        String[] entete = { "ID Salle", "Nom Salle", "Projecteur", "Capacite","Occupation","Type","Acces Handic","Modifier"};
        String req = "SELECT * FROM salles ORDER BY id ASC";
        Table table = new Table(entete,entete.length,7,req);
        JTable tab = table.getTable();
        TableColumnModel modele = tab.getColumnModel();
        modele.getColumn(0).setCellRenderer(new CellCenter());
        modele.getColumn(1).setCellRenderer(new CellCenter());
        modele.getColumn(2).setCellRenderer(new CellCenter());
        modele.getColumn(3).setCellRenderer(new CellCenter());
        modele.getColumn(4).setCellRenderer(new CellCenter());
        modele.getColumn(5).setCellRenderer(new CellCenter());
        modele.getColumn(6).setCellRenderer(new CellCenter());

        modele.getColumn(7).setCellRenderer(new ButtonEdit());
        modele.getColumn(7).setCellEditor(new ListeSallesDirect.CellEditorEdit(new JCheckBox()));
        JScrollPane pan = table.getPane(content.getWidth());
        content.removeAll();
        content.setLayout(new BorderLayout());
        content.add(pan);
        content.revalidate();
    }

    public class CellEditorEdit extends DefaultCellEditor {
        private final JButton button;
        private String label;
        private boolean clicked;
        private int row;
        private JTable table;

        public CellEditorEdit(JCheckBox checkBox) {
            super(checkBox);
            button = new JButton();
            button.setOpaque(true);
            button.setForeground(Color.black);
            button.setBackground(Color.red);

            button.addActionListener(e -> fireEditingStopped());
        }

        public Component getTableCellEditorComponent(JTable table, Object value, boolean isSelected, int row,
                int column) {
            this.table = table;
            this.row = row;
            button.setForeground(Color.black);
            button.setBackground(Color.red);
            label = (value == null) ? "" : value.toString();
            clicked = true;
            return button;
        }

        public Object getCellEditorValue() {
            if (clicked) {
                // Action au clic de la souris
                 edit(Integer.parseInt(table.getValueAt(row, 0).toString()));
            }
            clicked = false;
            return label;
        }

        public boolean stopCellEditing() {
            clicked = false;
            return super.stopCellEditing();
        }

        protected void fireEditingStopped() {
            super.fireEditingStopped();
        }
    }

    /**
     * cette methode nous permet de modifier une salle en faisant appel à la classe SalleEditDirect
     * @param str
     */
    public void edit(int str) {
        SalleEditDirect ae = new SalleEditDirect(new JFrame(), true, str, this);
        ae.setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed"desc="GeneratedCode">//
    // GEN-BEGIN:initComponents

    private void initComponents() {

        JPanel jPanel1 = new JPanel();
        jPanel1.setForeground(new Color(255, 255, 255));
        JLabel jLabel1 = new JLabel();
        JPanel jPanel2 = new JPanel();
        content = new javax.swing.JPanel();

        jPanel1.setBackground(new Color(0, 0, 128));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Liste de toutes les Salles");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 675,
                                        Short.MAX_VALUE)
                                .addContainerGap()));
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
                                jPanel1Layout.createSequentialGroup()
                                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel1)
                                        .addContainerGap()));

        jPanel2.setBackground(new java.awt.Color(153, 204, 255));

        javax.swing.GroupLayout contentLayout = new javax.swing.GroupLayout(content);
        content.setLayout(contentLayout);
        contentLayout.setHorizontalGroup(
                contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE));
        contentLayout.setVerticalGroup(
                contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 393, Short.MAX_VALUE));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap()));
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(content, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE,
                                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE,
                                        javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addContainerGap()));
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel content;


    // End of variables declaration//GEN-END:variables

}
